initSidebarItems({"enum":[["MasterPlaylistTag","Contains all the tags required to parse a master playlist."],["MediaPlaylistTag","Contains all the tags required to parse a media playlist."],["SegmentTag","All possible media segment tags."]],"fn":[["alternative_media_tag",""],["byte_range_val",""],["comment_tag",""],["consume_line",""],["contains_master_tag","Scans input looking for either a master or media `#EXT` tag."],["duration_title_tag",""],["ext_tag",""],["float",""],["from_utf8_slice",""],["from_utf8_slice2",""],["is_master_playlist","When a media tag or no master tag is found, this returns false."],["is_master_playlist_tag_line",""],["key",""],["key_value_pair",""],["key_value_pairs",""],["m3u_tag",""],["map",""],["master_playlist_tag",""],["media_playlist_tag",""],["media_segment_tag",""],["number",""],["parse_master_playlist","Parse input as a master playlist"],["parse_master_playlist_res","Parse input as a master playlist"],["parse_master_playlist_tags",""],["parse_media_playlist","Parse input as a media playlist"],["parse_media_playlist_res","Parse input as a media playlist"],["parse_media_playlist_tags",""],["parse_playlist","Parse a m3u8 playlist."],["parse_playlist_res","Parse a m3u8 playlist just like `parse_playlist`. This returns a Result<PLaylist,_>."],["playlist_type",""],["quoted",""],["session_data_tag",""],["session_key_tag",""],["start_tag",""],["unquoted",""],["variant_i_frame_stream_tag",""],["variant_stream_tag",""],["version_tag",""]],"mod":[["playlist","Contains all the structs used for parsing."]]});